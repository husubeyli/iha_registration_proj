version: '3'

services:
  nginx-proxy:
    container_name: dev_web
    image: jwilder/nginx-proxy
    restart: "always"
    ports:
        - "80:80"
    volumes:
        - /var/run/docker.sock:/tmp/docker.sock:ro
        - ./nginx/vhost/:/etc/nginx/vhost.d:ro
        - ./nginx/conf.d/client_max_body_size.conf:/etc/nginx/conf.d/client_max_body_size.conf:ro
        - ./static/:/baykar_iha_main/static
        - ./media/:/baykar_iha_main/media
        - ./nginx/proxy.conf/:/etc/nginx/proxy.conf

  postgres:
    image: postgres:14
    restart: always
    volumes:
        - ./pgdb/:/var/lib/postgresql/
    ports:
        - "5432:5432"
    env_file: ./.env


  # redis:
  #   container_name:  dev_redis
  #   image: redis
  #   ports: 
  #     - 6379:6379
  #   restart: on-failure
  #   command: ["redis-server", "--appendonly", "yes"]
  #   hostname: redis

  # celery:
  #   build:
  #     context: .
  #     dockerfile: celery.dockerfile
  #   volumes:
  #     - .:/code
  #   command: celery -A baykar_iha_main worker -l info -B
  #   links:
  #     - redis
  #     - postgres
  #   depends_on:
  #     - "redis"
  #     - "postgres"
  #   env_file: ./.env

    
  web:
    container_name:  dev_backend
    build: .
    ports:
      - "8000:8000"
    volumes:
      - .:/code
      - ./static/:/code/static
      - ./media/:/code/media
    depends_on:
      - "postgres"
    env_file: ./.env

networks:
  default:
    external:
      name: nginx-proxy
  web:
    external: true